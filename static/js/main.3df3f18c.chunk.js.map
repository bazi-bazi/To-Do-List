{"version":3,"sources":["redux/states.js","redux/store.js","redux/reducer.js","redux/actions.js","components/header/index.js","components/header/Header.js","components/todoinput/index.js","components/todoinput/ToDoInput.js","components/todo/index.js","components/todo/ToDo.js","components/todolist/index.js","components/todolist/ToDoList.js","App.js","index.js"],"names":["todos","store","createStore","newTodos","state","action","type","push","payload","filter","todo","id","index","i","length","Header","useSelector","className","ToDoInput","useState","name","setName","dispatch","useDispatch","onChange","e","target","value","placeholder","required","onClick","uuid","ToDo","check","setCheck","editable","setEditable","style","color","updateTodo","ToDoList","map","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3df3f18c.chunk.js","sourcesContent":["export let todos = [];","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport let store = createStore(reducer);\r\n","import { ADD_TODO, DELETE_TODO, UPDATE_TODO } from \"./actions\";\r\nimport { todos } from \"./states\";\r\n\r\nexport let reducer = (state = todos, action) => {\r\n  let newTodos;\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      newTodos = [...state];\r\n      newTodos.push(action.payload);\r\n      return newTodos;\r\n    case DELETE_TODO:\r\n      newTodos = [...state];\r\n      newTodos = newTodos.filter((todo) => todo.id !== action.payload);\r\n      return newTodos;\r\n    case UPDATE_TODO:\r\n      newTodos = [...state];\r\n      let index = -1;\r\n      for (let i = 0; i < newTodos.length; i++) {\r\n        index++;\r\n        if (newTodos[i].id === action.payload.id) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (index !== -1) {\r\n        newTodos[index] = action.payload;\r\n        return newTodos;\r\n      }\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\n\r\n\r\nexport const addTodo = (todo) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: todo,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (todoid) => {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: todoid,\r\n  };\r\n};\r\n\r\nexport const updateTodo = (todo) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload: todo,\r\n  };\r\n};","import Header from \"./Header\";\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Header = () => {\r\n  let todos = useSelector((state) => state);\r\n  return (\r\n    <div>\r\n      <header className=\"header\">\r\n        <div className=\"header__items\">\r\n          <h1 className=\"header__title\">Task Manager</h1>\r\n          <div className=\"header__tabs\">\r\n            <p className=\"header__tabs__item\">Active Tasks: {todos.length}</p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import ToDoInput from \"./ToDoInput\";\r\n\r\nexport default ToDoInput;","import React, { useState } from \"react\";\r\nimport \"./Todoinput.css\";\r\nimport { addTodo } from \"../../redux/actions\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ToDoInput = () => {\r\n  let [name, setName] = useState();\r\n  let dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <form className=\"form\">\r\n        <input\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n          type=\"text\"\r\n          placeholder=\"Add Task...\"\r\n          required\r\n          className=\"task-input\"\r\n        />\r\n        <div className=\"buttons\">\r\n          <button\r\n            onClick={() => {\r\n              dispatch(\r\n                addTodo({\r\n                  id: { uuid },\r\n                  name: name,\r\n                })\r\n              );\r\n              setName(\"\");\r\n            }}\r\n            type=\"submit\"\r\n            className=\"btn add_task_btn\"\r\n          >\r\n            Edd Task\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoInput;\r\n","import ToDo from \"./ToDo\";\r\n\r\n\r\nexport default ToDo;","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo, updateTodo, checkTodo } from \"../../redux/actions\";\r\nimport \"./todo.css\";\r\n\r\nconst ToDo = ({ todo }) => {\r\n  const [check, setCheck] = useState(false);\r\n  const [editable, setEditable] = useState(false);\r\n  const [name, setName] = useState(todo.name);\r\n  let dispatch = useDispatch();\r\n\r\n  const setUnsetCheck = () => {\r\n    setCheck(!check);\r\n  };\r\n  return (\r\n    <div>\r\n      <li className=\"list-item\">\r\n        {editable ? (\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            className=\"todoinput\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        ) : (\r\n          <span>{todo.name}</span>\r\n        )}\r\n        {check ? (\r\n          <p style={{ color: \"#06d6a0\" }}>Done</p>\r\n        ) : (\r\n          <p className=\"saving\">\r\n            Proceed<span>.</span>\r\n            <span>.</span>\r\n            <span>.</span>\r\n          </p>\r\n        )}\r\n        <div>\r\n          <button className=\"btn-done task-btn\" onClick={setUnsetCheck}>\r\n            {check ? (\r\n              <i className=\"fas fa-check\"></i>\r\n            ) : (\r\n              <i className=\"fas fa-check\" style={{ color: \"#5765\" }}></i>\r\n            )}\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn-edit task-btn\"\r\n            onClick={() => {\r\n              dispatch(\r\n                updateTodo({\r\n                  ...todo,\r\n                  name: name,\r\n                })\r\n              );\r\n              if (editable) {\r\n                setName(todo.name);\r\n              }\r\n\r\n              setEditable(!editable);\r\n            }}\r\n          >\r\n            {editable ? (\r\n              <span className=\"updatetext\">update</span>\r\n            ) : (\r\n              <i className=\"fas fa-pen\"></i>\r\n            )}\r\n          </button>\r\n          <button\r\n            className=\"btn-delete task-btn\"\r\n            onClick={() => dispatch(deleteTodo(todo.id))}\r\n          >\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import ToDoList from \"./ToDoList\";\r\n\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ToDo from \"../todo\";\r\nimport \"./Todolist.css\";\r\n\r\nconst ToDoList = () => {\r\n  let todos = useSelector((state) => state);\r\n  return (\r\n    <div className=\"todolist\">\r\n      {todos < 1 ? (\r\n        <h3 className=\"todolist_notask\">No Task Assigned Yet</h3>\r\n      ) : (\r\n        todos.map((todo) => {\r\n          return <ToDo key={todo.id} todo={todo} />;\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport ToDoInput from \"./components/todoinput\";\nimport ToDoList from \"./components/todolist\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"main\">\n        <ToDoInput />\n        <ToDoList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}